/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author CacTrainer
 */
public class BookViewFrame extends javax.swing.JFrame {

    /**
     * Creates new form BookViewFrame
     */
    public BookViewFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstBookList = new javax.swing.JList<>();
        btnAddBook = new javax.swing.JButton();
        lblBookTitle = new javax.swing.JLabel();
        lblReturnDate = new javax.swing.JLabel();
        btnCalculateOverdue = new javax.swing.JButton();
        lblOverdueCharge = new javax.swing.JLabel();
        txtBookTitle = new javax.swing.JTextField();
        txtOverdueCharge = new javax.swing.JTextField();
        txtReturnDay = new javax.swing.JTextField();
        txtReturnMonth = new javax.swing.JTextField();
        txtReturnYear = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstBookList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstBookListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstBookList);

        btnAddBook.setText("Add Book");
        btnAddBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddBookMouseClicked(evt);
            }
        });

        lblBookTitle.setText("Book title:");

        lblReturnDate.setText("Return date:");

        btnCalculateOverdue.setText("Calculate overdue");
        btnCalculateOverdue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCalculateOverdueMouseClicked(evt);
            }
        });

        lblOverdueCharge.setText("Overdue charge:");

        txtOverdueCharge.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnAddBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBookTitle)
                            .addComponent(lblReturnDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtReturnDay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtReturnMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtReturnYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOverdueCharge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOverdueCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalculateOverdue))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBookTitle)
                            .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblReturnDate)
                            .addComponent(txtReturnDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReturnMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReturnYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOverdueCharge)
                            .addComponent(txtOverdueCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCalculateOverdue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddBook)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddBookMouseClicked
        
        showAddBookFrame();
    }//GEN-LAST:event_btnAddBookMouseClicked

    private void lstBookListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBookListMouseClicked
        
        loadBookInformation(lstBookList.getSelectedValue());
    }//GEN-LAST:event_lstBookListMouseClicked

    private void btnCalculateOverdueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCalculateOverdueMouseClicked
        
        calculateOverdue();
    }//GEN-LAST:event_btnCalculateOverdueMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookViewFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnCalculateOverdue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookTitle;
    private javax.swing.JLabel lblOverdueCharge;
    private javax.swing.JLabel lblReturnDate;
    private javax.swing.JList<String> lstBookList;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtOverdueCharge;
    private javax.swing.JTextField txtReturnDay;
    private javax.swing.JTextField txtReturnMonth;
    private javax.swing.JTextField txtReturnYear;
    // End of variables declaration//GEN-END:variables

    
    private ArrayList<Book> bookList;
    private String dbFile = "C:\\Users\\CacTrainer\\Desktop\\book_db.txt";
    
    public void setBookList(ArrayList<Book> bookList) {
    
        this.bookList = bookList;
        loadBookList();
        refreshBookList();
    }
    
    private void showAddBookFrame() {
    
        AddBookFrame addBookFrame = new AddBookFrame();
        addBookFrame.setBooklist(bookList);
        addBookFrame.setParentWindow(this);
        addBookFrame.setVisible(true);
    }
    
    public void refreshBookList() {
    
        DefaultListModel defaultListModel = new DefaultListModel();
        
        for(int i=0;i<bookList.size();i++) {
        
            defaultListModel.addElement(bookList.get(i).getName());
        }
        
        lstBookList.setModel(defaultListModel);
    }
    
    private Book getBookByName(String name) {
    
        for(Book book : bookList) {
        
            if(book.getName().equals(name)) {
            
                return book;
            }
        }
        
        return null;
    }
    
    private void loadBookInformation(String bookName) {
    
        txtBookTitle.setText(bookName);
        txtReturnDay.setText("");
        txtReturnMonth.setText("");
        txtReturnYear.setText("");
        txtOverdueCharge.setText("");
        
    }
    
    private void calculateOverdue() {
    
        try {
            
            int returnDay = Integer.parseInt(txtReturnDay.getText());
            int returnMonth = Integer.parseInt(txtReturnMonth.getText());
            int returnYear = Integer.parseInt(txtReturnYear.getText());
            
            Book bookObject = getBookByName(txtBookTitle.getText());
            
            if(bookObject != null) {
                
                Date returnDate = new Date(returnYear, returnMonth, returnDay);
                float overdueCharge = bookObject.getOverdueCharge(returnDate);
                
                txtOverdueCharge.setText(String.valueOf(overdueCharge));
            }
        }
        catch(NumberFormatException ex) {
        
            JOptionPane.showMessageDialog(null, "Please fill all the fields correctly!");
        }
    }
    
    public void saveBookList() {
    
        JSONArray jsonBookList = new JSONArray();
        
        for(Book book : bookList) {
        
            jsonBookList.put(book.getJSONObject());
        }
        
        try{
            
            PrintWriter out = new PrintWriter(dbFile);
            out.print(jsonBookList.toString());
            out.close();
        }
        catch(FileNotFoundException ex) {
        
            ex.printStackTrace();
        }
    }
    
    public void loadBookList() {
    
        String jsonString = readFile(dbFile);
        
        if(jsonString != null) {
        
            try {
                
                JSONArray jsonArray = new JSONArray(jsonString);
                
                for(int i=0;i<jsonArray.length();i++) {
                
                    JSONObject jsonBookObject = jsonArray.getJSONObject(i);
                    
                    bookList.add(new Book(jsonBookObject));
                }
            }
            catch(JSONException ex) {
            
            }
        }
    }
    
    private String readFile(String fileName) {
    
        try {
            
            InputStream is = new FileInputStream(fileName); 
            BufferedReader buf = new BufferedReader(new InputStreamReader(is)); 

            String line = buf.readLine(); StringBuilder sb = new StringBuilder(); 

            while(line != null){ 
                sb.append(line).append("\n"); 
                line = buf.readLine(); 
            } 

            return sb.toString();
        }
        catch(IOException ex) {
        
            return null;
        }
    }
}
